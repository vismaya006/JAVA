import java.util.Stack;

public class Main {

    public static int beast(String str) {
        Stack<Integer> num = new Stack<>();
        Stack<Character> Symbol = new Stack<>();

        int i = 0;
        while (i < str.length()) {
            if (Character.isDigit(str.charAt(i))) {
                int a = 0;
                while (i < str.length() && Character.isDigit(str.charAt(i))) {
                    a = a * 10 + (str.charAt(i) - '0');
                    i++;
                }
                num.push(a);
            } else if (str.charAt(i) == '+' || str.charAt(i) == '-' || str.charAt(i) == '*' || str.charAt(i) == '/') {
                while (!Symbol.isEmpty() && precedence(Symbol.peek()) >= precedence(str.charAt(i))) {
                    char op = Symbol.pop();
                    int num2 = num.pop();
                    int num1 = num.pop();
                    num.push(operation(op, num1, num2));
                }
                Symbol.push(str.charAt(i));
                i++;
            } else {
                i++;
            }
        }

        while (!Symbol.isEmpty()) {
            char op = Symbol.pop();
            int num2 = num.pop();
            int num1 = num.pop();
            num.push(operation(op, num1, num2));
        }

        return num.pop();
    }

    public static int precedence(char ch) {
        switch (ch) {
            case '+':
            case '-':
                return 1;
            case '/':
            case '*':
                return 2;
        }
        return -1;
    }

    public static int operation(char op, int num1, int num2) {
        switch (op) {
            case '+':
                return num1 + num2;
            case '-':
                return num1 - num2;
            case '/':
                return num1 / num2;
            case '*':
                return num1 * num2;
        }
        return -1;
    }

    public static void main(String[] args) {
        String str = "17 + 8 - 9 / 2 + 3 * 3";
        int res = beast(str);
        System.out.println("The result is : " + res);
    }
}
